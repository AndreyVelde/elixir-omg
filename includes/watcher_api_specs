<h1 id='watcher'>Watcher</h1>
<p>API specification of the Watcher&#39;s security-critical Service</p>
<h2 id='account-get-utxos'>Account - Get Utxos</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/account.get_utxos -d <span class="s1">'{"address": "0xb3256026863eb6ae5b06fa396ab09069784ea8ea"}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="s2">"txindex"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
            </span><span class="s2">"owner"</span><span class="p">:</span><span class="w"> </span><span class="s2">"B3256026863EB6AE5B06FA396AB09069784EA8EA"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"oindex"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"currency"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0000000000000000000000000000000000000000"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"blknum"</span><span class="p">:</span><span class="w"> </span><span class="mi">1000</span><span class="p">,</span><span class="w">
            </span><span class="s2">"amount"</span><span class="p">:</span><span class="w"> </span><span class="mi">10</span><span class="p">,</span><span class="w">
            </span><span class="s2">"utxo_pos"</span><span class="p">:</span><span class="w"> </span><span class="mi">10000000010000000</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Gets all utxos belonging to the given address.
<aside class="notice">
Note that this is a performance intensive call and should only be used if the chain is byzantine and the user needs to retrieve utxo information to be able to exit.
Normally an application should use the Informational API&#39;s <a href="#account-get-utxos">Account - Get Utxos</a> instead.
This version is provided in case the Informational API is not available.
</aside></p>
<h3 id='http-request'>HTTP Request</h3>
<p><code>POST /account.get_utxos</code></p>
<h3 id='request-body'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>address</td>
<td>Hex encoded string</td>
<td>Address of the account</td>
</tr>
</tbody></table>
<h2 id='utxo-get-challenge-data'>Utxo - Get Challenge Data</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/utxo.get_challenge_data -d <span class="s1">'{"utxo_pos": 10001001}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F849822AF880808080809400000000000000000000000000000000000000009489F5AD3F771617E853451A93F7A73E48CF5550D104948CE5C73FD5BEFFE0DCBCB6AFE571A2A3E73B043C03"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"sigs"</span><span class="p">:</span><span class="w"> </span><span class="s2">"6BFB9B2DBE3201BDC48072E69148A0ED9AF3E01D87772C8A77A478F998CEB5236B0AE64FAB3C21C078188B162D86913010A988E4B0CE68EE95D86783008FD9C71B0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"proof"</span><span class="p">:</span><span class="w"> </span><span class="sspan><span class="p">,</span><span class="w">
        </span><span class="s2">"eutxoindex"</span><span class="p">:</span><span class="w"> </span><span class="s2">"200001001"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"cutxopos"</span><span class="p">:</span><span class="w"> </span><span class="s2">"100001001"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Gets challenge data for a given utxo exit</p>
<h3 id='http-request-2'>HTTP Request</h3>
<p><code>POST /utxo.get_challenge_data</code></p>
<h3 id='request-body-2'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>utxo_pos</td>
<td>Integer</td>
<td>Utxo position (encoded as single integer, the way contract represents them)</td>
</tr>
</tbody></table>
<h2 id='utxo-get-exit-data'>Utxo - Get Exit Data</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/utxo.get_exit_data -d <span class="s1">'{"utxo_pos": 10001001}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"utxo_pos"</span><span class="p">:</span><span class="w"> </span><span class="mi">10001001</span><span class="p">,</span><span class="w">
        </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F84701018080808094000000000000000000000000000000000000000094D27EB36B73F275E3F7CD20A510710F763DE3BF366E94000000000000000000000000000000000000000080"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"sigs"</span><span class="p">:</span><span class="w"> </span><span class="s2">"7C29FB8327F60BBFC6201DF2FBAAA8D22E5C0CA3D1EB5FF0D37ECDAF61E507FE77DED514AA42A622E5682BF692B33E60D292425C531109841C67B5BD86876CDE1C0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"proof"</span><span class="p">:</span><span class="w"> </span><span class="s2">"CEDB8B31D1E4CB72EC267A8B27C42C4D9982C3F3950D88003F44B3A797202D848025356282CA1C28CBD51FBF7D8E9187AA85F628D054B2C2233AA83BCAEF1F0EB4C11951957C6F8F642C4AF61CD6B24640FEC6DC7FC607EE8206A99E92410D3021DDB9A356815C3FAC1026B6DEC5DF3124AFBADB485C9BA5A3E3398A04B7BA85E58769B32A1BEAF1EA27375A44095A0D1FB664CE2DD358E7FCBFB78C26A193440EB01EBFC9ED27500CD4DFC979272D1F0913CC9F66540D7E8005811109E1CF2D887C22BD8750D34016AC3C66B5FF102DACDD73F6B014E710B51E8022AF9A1968FFD70157E48063FC33C97A050F7F640233BF646CC98D9524C6B92BCF3AB56F839867CC5F7F196B93BAE1E27E6320742445D290F2263827498B54FEC539F756AFCEFAD4E508C098B9A7E1D8FEB19955FB02BA9675585078710969D3440F5054E0F9DC3E7FE016E050EFF260334F18A5D4FE391D82092319F5964F2E2EB7C1C3A5F8B13A49E282F609C317A833FB8D976D11517C571D1221A265D25AF778ECF8923490C6CEEB450AECDC82E28293031D10C7D73BF85E57BF041A97360AA2C5D99CC1DF82D9C4B87413EAE2EF048F94B4D3554CEA73D92B0F7AF96E0271C691E2BB5C67ADD7C6CAF302256ADEDF7AB114DA0ACFE870D449A3A489F781D659E8BECCDA7BCE9F4E8618B6BD2F4132CE798CDC7A60E7E1460A7299E3C6342A579626D2"</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Gets exit data for a given utxo</p>
<h3 id='http-request-3'>HTTP Request</h3>
<p><code>POST /utxo.get_exit_data</code></p>
<h3 id='request-body-3'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>utxo_pos</td>
<td>Integer</td>
<td>Utxo position (encoded as single integer, the way contract represents them)</td>
</tr>
</tbody></table>
<h2 id='transaction-submit'>Transaction - Submit</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/transaction.submit -d <span class="s1">'{"transaction": "f8d083015ba98080808080940000..."}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
      </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
      </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
      </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
          </span><span class="s2">"blknum"</span><span class="p">:</span><span class="w"> </span><span class="mi">123000</span><span class="p">,</span><span class="w">
          </span><span class="s2">"txindex"</span><span class="p">:</span><span class="w"> </span><span class="mi">111</span><span class="p">,</span><span class="w">
          </span><span class="s2">"txhash"</span><span class="p">:</span><span class="w"> </span><span class="s2">"bdf562c24ace032176e27621073df58ce1c6f65de3b5932343b70ba03c72132d"</span><span class="w">
      </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Watcher passes signed transaction to the child chain only if it&#39;s secure (better explaination needed)</p>
<h3 id='http-request-4'>HTTP Request</h3>
<p><code>POST /transaction.submit</code></p>
<h3 id='request-body-4'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>transaction</td>
<td>Hex encoded string</td>
<td>Signed transaction RLP-encoded to bytes and HEX-encoded to string</td>
</tr>
</tbody></table>
<h2 id='status'>Status</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/status
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"last_validated_child_block_number"</span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
        </span><span class="s2">"last_mined_child_block_timestamp"</span><span class="p">:</span><span class="w"> </span><span class="mi">1535031020</span><span class="p">,</span><span class="w">
        </span><span class="s2">"last_mined_child_block_number"</span><span class="p">:</span><span class="w"> </span><span class="mi">11000</span><span class="p">,</span><span class="w">
        </span><span class="s2">"eth_syncing"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
        </span><span class="s2">"byzantine_events"</span><span class="p">:</span><span class="w">
        </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid_exit"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                    </span><span class="s2">"eth_height"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">615440</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"utxo_pos"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">10001001</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"owner"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"B3256026863EB6AE5B06FA396AB09069784EA8EA"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"currency"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"0000000000000000000000000000000000000000"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"amount"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">100</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"inflight_txs"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"txhash"</span><span class="p">:</span><span class="w"> </span><span class="s2">"230C450180808080..."</span><span class="p">,</span><span class="w">
                </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="p">,</span><span class="w">
                </span><span class="s2">"input_addresses"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                    </span><span class="s2">"0x1234..."</span><span class="w">
                </span><span class="p">],</span><span class="w">
                </span><span class="s2">"ouput_addresses"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                    </span><span class="s2">"0x1234..."</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"0x7890..."</span><span class="w">
                </span><span class="p">],</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"inflight_exits"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"txhash"</span><span class="p">:</span><span class="w"> </span><span class="s2">"230C450180808080..."</span><span class="p">,</span><span class="w">
                </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="p">,</span><span class="w">
                </span><span class="s2">"eth_height"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">615441</span><span class="p">,</span><span class="w">
                </span><span class="s2">"piggybacked_inputs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="w">
                </span><span class="s2">"piggybacked_outputs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="mi">1</span><span class="p">]</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">]</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Returns information about the current state of the child chain and the watcher.</p>

<aside class="warning">
The most critical function of the Watcher is to monitor the ChildChain and report dishonest activity.
The user must call the `/status` endpoint periodically to check. Any situation that requires the user to either exit or challenge an invalid exit will be included in the `byzantine_events` field.
</aside>

<aside class="notice">
Note that `inflight_txs` will be implemented in a later version.
</aside>
<h3 id='http-request-5'>HTTP Request</h3>
<p><code>POST /status</code></p>
<h3 id='request-body-5'>Request Body</h3>
<p>No parameters are required.</p>
<h3 id='byzantine-events'>Byzantine events</h3>
<p>All of the following events indicate byzantine behaviour and that the user should either exit or challenge.</p>
<h4 id='invalid_exit'><code>invalid_exit</code></h4>
<blockquote>
<p>An invalid_exit event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid_exit"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"eth_height"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">3521678</span><span class="p">,</span><span class="w">
        </span><span class="s2">"utxo_pos"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">10001001</span><span class="p">,</span><span class="w">
        </span><span class="s2">"owner"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"B3256026863EB6AE5B06FA396AB09069784EA8EA"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"currency"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"0000000000000000000000000000000000000000"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"amount"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">100</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Indicates that an invalid exit is occurring. It should be challenged.</p>
<h4 id='unchallenged_exit'><code>unchallenged_exit</code></h4>
<blockquote>
<p>An unchallenged_exit event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"unchallenged_exit"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"eth_height"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">3521678</span><span class="p">,</span><span class="w">
        </span><span class="s2">"utxo_pos"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">10001001</span><span class="p">,</span><span class="w">
        </span><span class="s2">"owner"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"B3256026863EB6AE5B06FA396AB09069784EA8EA"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"currency"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"0000000000000000000000000000000000000000"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"amount"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="mi">100</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Indicates that an invalid exit is dangerously close to finalization and hasn&#39;t been challenged. User should exit.</p>
<h4 id='invalid_block'><code>invalid_block</code></h4>
<blockquote>
<p>An invalid_block event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid_block"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"blockhash"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"DB32876CC6F26E96B9291682F3AF4A04C2AA2269747839F14F1A8C529CF90225"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"blocknum"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>An invalid block has been added to the chain. User should exit.</p>
<h4 id='block_withholding'><code>block_withholding</code></h4>
<blockquote>
<p>A block_withholding event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"block_withholding"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"blockhash"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="s2">"DB32876CC6F26E96B9291682F3AF4A04C2AA2269747839F14F1A8C529CF90225"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"blocknum"</span><span class="w">  </span><span class="p">:</span><span class="w"> </span><span class="mi">10000</span><span class="p">,</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>The ChildChain is withholding a block whose hash has been published on the root chain. User should exit.</p>
<h4 id='noncanonical_ife'><code>noncanonical_ife</code></h4>
<blockquote>
<p>A noncanonical_ife event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"noncanonical_ife"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>An in-flight exit of a non-canonical transaction has been started. It should be challenged.
<aside class="warning"> Not Implemented Yet.</aside></p>

<p>Event details:</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction that the event relates to</td>
</tr>
</tbody></table>
<h4 id='invalid_ife_challenge'><code>invalid_ife_challenge</code></h4>
<blockquote>
<p>A invalid_ife_challenge event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid_ife_challenge"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>A canonical in-flight exit has been challenged. The challenge should be responded to.
<aside class="warning"> Not Implemented Yet.</aside></p>

<p>Event details:</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction that the event relates to</td>
</tr>
</tbody></table>
<h4 id='piggyback_available'><code>piggyback_available</code></h4>
<blockquote>
<p>A piggyback_available event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"piggyback_available"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"available_outputs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="s2">"index"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0x7890..."</span><span class="p">},</span><span class="w">
            </span><span class="p">{</span><span class="s2">"index"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w"> </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0x1234..."</span><span class="p">},</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"available_inputs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="s2">"index"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w"> </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"0x1234..."</span><span class="p">}</span><span class="w">
        </span><span class="p">],</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>An in-flight exit has been started and can be piggybacked. If all inputs are owned by the same address, then <code>available_inputs</code> will not be present.
<aside class="warning"> Not Implemented Yet.</aside></p>

<p>Event details:</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction that the event relates to</td>
</tr>
<tr>
<td>available_outputs</td>
<td>Object array</td>
<td>The outputs (index and address) available to be piggybacked</td>
</tr>
<tr>
<td>available_inputs</td>
<td>Object array</td>
<td>The inputs (index and address) available to be piggybacked</td>
</tr>
</tbody></table>
<h4 id='invalid_piggyback'><code>invalid_piggyback</code></h4>
<blockquote>
<p>A invalid_piggyback event</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"event"</span><span class="p">:</span><span class="w"> </span><span class="s2">"invalid_piggyback"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inputs"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="w">
        </span><span class="s2">"outputs"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>An invalid piggyback is in process. Should be challenged.
<aside class="warning"> Not Implemented Yet.</aside></p>

<p>Event details:</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction that the event relates to</td>
</tr>
<tr>
<td>inputs</td>
<td>Integer array</td>
<td>A list of invalid piggybacked inputs</td>
</tr>
<tr>
<td>outputs</td>
<td>Integer array</td>
<td>A list of invalid piggybacked outputs</td>
</tr>
</tbody></table>
<h2 id='inflight-exit-get-exit-data'>Inflight Exit - Get Exit Data</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/inflight_exit.get_data -d <span class="s1">'{"txbytes": "F317010180808080940000..."}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F847010180808080940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"sigs"</span><span class="p">:</span><span class="w"> </span><span class="s2">"7C29FB8327F60BBFC62..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"input_txs_bytes"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="s2">"F81891018080808..."</span><span class="p">,</span><span class="w">
            </span><span class="s2">"2A0341808602A01..."</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"input_txs_proofs"</span><span class="w"> </span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
             </span><span class="s2">"CEDB8B31D1E4C..."</span><span class="p">,</span><span class="w">
             </span><span class="s2">"A67131D1E904C..."</span><span class="w">
        </span><span class="p">]</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Gets exit data for an in-flight exit</p>
<h3 id='http-request-6'>HTTP Request</h3>
<p><code>POST /inflight_exit.get_data</code></p>
<h3 id='request-body-6'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction</td>
</tr>
</tbody></table>
<h2 id='inflight-exit-get-competitor'>Inflight Exit - Get Competitor</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/inflight_exit.get_competitor -d <span class="s1">'{"txbytes": "F847010180808080940000..."}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"inflight_txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F847010180808080940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inflight_input_index"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
        </span><span class="s2">"competing_txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F317010180808080940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"competing_input_index"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
        </span><span class="s2">"competing_sig"</span><span class="p">:</span><span class="w"> </span><span class="s2">"9A23010180808080940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"competing_txid"</span><span class="p">:</span><span class="w"> </span><span class="mi">2600003920012</span><span class="p">,</span><span class="w">
        </span><span class="s2">"competing_proof"</span><span class="p">:</span><span class="w"> </span><span class="s2">"004C010180808080940000..."</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Returns a competitor to an in-flight exit. Note that if the competing transaction has not been put into a block <code>competing_txid</code> and <code>competing_proof</code> will not be returned.</p>
<h3 id='http-request-7'>HTTP Request</h3>
<p><code>POST /inflight_exit.get_competitor</code></p>
<h3 id='request-body-7'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction</td>
</tr>
</tbody></table>
<h2 id='inflight-exit-show-canonical'>Inflight Exit - Show Canonical</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/inflight_exit.prove_canonical -d <span class="s1">'{"txbytes": "F3170101C0940000..."}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"inflight_txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inflight_txid"</span><span class="p">:</span><span class="w"> </span><span class="mi">2600003920012</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inflight_proof"</span><span class="p">:</span><span class="w"> </span><span class="s2">"004C010180808080940000..."</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>To respond to a challenge to an in-flight exit, this proves that the transaction has been put into a block (and therefore is canonical).</p>
<h3 id='http-request-8'>HTTP Request</h3>
<p><code>POST /inflight_exit.prove_canonical</code></p>
<h3 id='request-body-8'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction</td>
</tr>
</tbody></table>
<h2 id='inflight-exit-get-input-challenge-data'>Inflight Exit - Get Input Challenge Data</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/inflight_exit.get_input_challenge_data -d <span class="s1">'{"txbytes": "F3170101C0940000...", "input_index": 1}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"inflight_txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inflight_input_index"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
        </span><span class="s2">"spending_txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F847010180808080940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"spending_input_index"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
        </span><span class="s2">"spending_sig"</span><span class="p">:</span><span class="w"> </span><span class="s2">"9A23010180808080940000..."</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Gets the data to challenge an invalid input piggybacked on an in-flight exit</p>
<h3 id='http-request-9'>HTTP Request</h3>
<p><code>POST /inflight_exit.get_input_challenge_data</code></p>
<h3 id='request-body-9'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction</td>
</tr>
<tr>
<td>input_index</td>
<td>Integer</td>
<td>The index of the invalid input</td>
</tr>
</tbody></table>
<h2 id='inflight-exit-get-output-challenge-data'>Inflight Exit - Get Output Challenge Data</h2><pre class="highlight shell tab-shell"><code>curl -X POST -H <span class="s2">"Content-Type: application/json"</span> http://localhost:7434/inflight_exit.get_output_challenge_data -d <span class="s1">'{"txbytes": "F3170101C0940000...", "output_index": 0}'</span>
</code></pre><pre class="highlight elixir tab-elixir"><code><span class="o">//</span> <span class="no">TODO</span>
</code></pre><pre class="highlight javascript tab-javascript"><code><span class="c1">// TODO</span>
</code></pre>
<blockquote>
<p>The above command returns JSON document:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"success"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"data"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"inflight_txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F3170101C0940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inflight_output_pos"</span><span class="p">:</span><span class="w"> </span><span class="mi">21000634002</span><span class="p">,</span><span class="w">
        </span><span class="s2">"inflight_proof"</span><span class="p">:</span><span class="w"> </span><span class="s2">"03F451067A805540000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"spending_txbytes"</span><span class="p">:</span><span class="w"> </span><span class="s2">"F847010180808080940000..."</span><span class="p">,</span><span class="w">
        </span><span class="s2">"spending_input_index"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
        </span><span class="s2">"spending_sig"</span><span class="p">:</span><span class="w"> </span><span class="s2">"9A23010180808080940000..."</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>Gets the data to challenge an invalid output piggybacked on an in-flight exit</p>
<h3 id='http-request-10'>HTTP Request</h3>
<p><code>POST /inflight_exit.get_output_challenge_data</code></p>
<h3 id='request-body-10'>Request Body</h3>
<table><thead>
<tr>
<th>Attribute</th>
<th>Type</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td>txbytes</td>
<td>Hex encoded string</td>
<td>The in-flight transaction</td>
</tr>
<tr>
<td>output_index</td>
<td>Integer</td>
<td>The index of the invalid output</td>
</tr>
</tbody></table>
